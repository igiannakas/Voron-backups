
[gcode_macro PRINT_START]
#SUPER SLICER-PRUSA SLICER: YOU MUST ADD THESE LINES TO PRINT START CODE IN THE PRINTER GCODE SECTION OR NOT OF THIS WiLL WORK - EACH LINE MUST BE UNCOMMENTED
#M104 S0 ; Stops PrusaSlicer from sending temp waits separately
#M140 S0
#print_start EXTRUDER=[first_layer_temperature[initial_extruder]] BED=[first_layer_bed_temperature]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = 325 %}
  {% set y_wait = 350 %}
  {% set min_ext = target_extruder %}
  {% set max_ext = target_extruder+5 %}

  {% set COLORS = params.COLORS|default("")|string %}
  {% set colors = COLORS.split(",") %}
  {% set ttg_map = printer.mmu.ttg_map %}

  {% for color in colors %}
      {% set tool = loop.index0 %}
      {% set gate = ttg_map[tool] %}                  # Make sure map to correct gate in case of TTG map
      MMU_GATE_MAP GATE={gate} COLOR={color}          # Register the filament color against correct gate in gate map
  {% endfor %}
  
  SET_GCODE_VARIABLE MACRO=PRINT_END VARIABLE=bedtemp VALUE={printer['heater_bed'].target}

  # clear paused states and set stepper currents
  CLEAR_PAUSE
  CANCEL_COOLDOWN
  CANCEL_NEVERMORE
  cancel_adaptive_exhaust
  SET_PAUSE_NEXT_LAYER ENABLE=0
  _SET_PRINT_CURRENT

  # Set LED's
  SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
  SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=2 TRANSMIT=0
  SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3 
  SET_LED LED=disco1 RED=1 GREEN=0.85 BLUE=0.73

  #reset printer limits
  SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel|int}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity|float}
  SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity|int}
  M220 S100 #reset speed


  {% if params.BED|int > 70 %}
    CARTOGRAPHER_MODEL_SELECT NAME=ABS
  {% else %}
    CARTOGRAPHER_MODEL_SELECT NAME=default
  {% endif %}
  
 
  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  M104 S100 # Warms up nozzle
  M140 S{target_bed} # Start bed heating early
  
  SET_DISPLAY_TEXT MSG="Homing"                # Displays info  
  STATUS_HOMING         # Sets SB-leds to homing-mode
  _CG28                 #  Home (XYZ)
  G90                   # Absolute position
  M400

  G1 X{x_wait} Y{y_wait} Z30 F9000  # Goes to parking area
  
  #  Clear Mesh
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Bed heating and heatsoaking
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
  #If printing ABS
  {% if params.BED|int > 90 %}
    SET_LED LED=disco1 RED=0.8 GREEN=0.35 BLUE=0
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    ##  Uncomment if you have a Nevermore.
    SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.6
    G1 X175 Y175 Z100 F9000  # Goes to parking area
    M106 S255   # Turns on partcooling fan

    M140 S{target_bed}                                  # Sets the target temp for the bed
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed-2}   # Waits for bed to reach desired temp
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.4
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0.8
  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}    
    SET_LED LED=disco1 RED=0.8 GREEN=0.35 BLUE=0
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0                     # Turns off the nevermore
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0.3
    UPDATE_DELAYED_GCODE ID=adaptive_exhaust_fan DURATION=30
    M140 S{target_bed+target_bed*0.1}                           # Sets the target temp for the bed
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed-2}   # Waits for bed to reach desired temp
    SET_DISPLAY_TEXT MSG="Waiting for buildplate: {target_bed-11}c"                 # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor buildplate" minimum={target_bed-11}
    M140 S{target_bed}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={target_bed-1} MAXIMUM={target_bed+5}   # Waits for bed to reach desired temp
  {% endif %}

  M400
  SET_LED LED=disco1 RED=1 GREEN=0.85 BLUE=0.73
  # Heating nozzle to 170 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Heat up nozzle to 160c"          # Displays info
  M104 S160 # Heats the nozzle to 160c, non blocking
  TEMPERATURE_WAIT SENSOR=extruder minimum=160

  ##  QGL
  M400
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  M400
  SET_DISPLAY_TEXT MSG="Homing Z"      # Displays info  
  status_calibrating_z  
  G28 Z                           # Homes Z again after QGL
  
  G1 X{x_wait} Y{y_wait} Z15 F9000
  M104 S250
  SET_DISPLAY_TEXT MSG="Handing over to MMU"      # Displays info  


[gcode_macro PRINT_START_CONTINUE]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}

  {% set x_wait = 325 %}
  {% set y_wait = 350 %}
  {% set min_ext = target_extruder %}
  {% set max_ext = target_extruder+5 %}

  SET_DISPLAY_TEXT MSG="MMU returned"
  M400

  # Reset extruder
  M83
  G92 E0
  G1 E-5 F2100
  G92 E0
  # Make sure we are in the parking space
  G1 X{x_wait} Y{y_wait} Z15 F9000

  M400
  SET_DISPLAY_TEXT MSG="Cleaning Nozzle"      # Displays info
  M104 S{target_extruder}
  G1 X{x_wait} Y{y_wait} Z30 F9000  # Goes to parking area
  TEMPERATURE_WAIT SENSOR=extruder minimum={min_ext} maximum={max_ext}
  M104 S160
  M106 S255   # Turns on partcooling fan 100pc
  CLEAN_NOZZLE
  TEMPERATURE_WAIT SENSOR=extruder maximum=165
  CLEAN_NOZZLE_QUICK
  M106 S77   # Turns on partcooling fan 30pc

  ##  QGL & Z Home
  M400
  SET_DISPLAY_TEXT MSG="QGL"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  quad_gantry_level               # Levels the buildplate via QGL
  M400
  SET_DISPLAY_TEXT MSG="Homing Z"      # Displays info  
  status_calibrating_z  
  G28 Z 
  
  ##  Bed Mesh
  M400
  SET_DISPLAY_TEXT MSG="Bed Mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode              

  BED_MESH_CALIBRATE
    
# Heats up the nozzle up to the nozzle purging temperature
  M400
  SET_DISPLAY_TEXT MSG="Nozzle: 250c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to parking area
  M107                                                          # Turns off partcooling fan
  M104 S250  # Heats the nozzle to purging temp
  TEMPERATURE_WAIT SENSOR=extruder minimum=245

  # prime nozzle
  M400
  SET_DISPLAY_TEXT MSG="Purging filament..."
  G1 X340 Y360 F6000
  M400
  G1 Z0 F1200
  M83
  G92 E0
  M106 S25   # Turns on partcooling fan 10pc
  M400
  G1 E140 F400
  G1 Z1 F2100
  G1 E50 F400
  G1 Z3 F2100
  G1 E30 F400
  G1 Z5 F2100
  M400
  M106 S255   # Turns on partcooling fan 100pc
  
  M400
  SET_DISPLAY_TEXT MSG="Heating nozzle to print temperature..."
  M104 S{target_extruder}
  TEMPERATURE_WAIT SENSOR=extruder minimum={min_ext} maximum={max_ext}
  M400

  M400
  SET_DISPLAY_TEXT MSG="Detaching purge poop..."
  G92 E0
  G1 E-2 F2100
  G1 Z4 F2100

  G1 X330 F12000
  G1 X348 F12000
  G1 X330 F12000
  G1 X348 F12000
  G1 X330 F12000
  G1 X348 F12000
  
  G1 Z4 F2100
  
  G1 Y347 F12000
  G1 X348
  G1 Y358 F12000
  G1 Y347 F12000
  G1 Y358 F12000
  G1 Y347 F12000

  G1 X330 F12000
  G1 X348 F12000
  G1 X330 F12000
  G1 X348 F12000
  G1 X330 F12000
  G1 X348 F12000
  M400
  G1 Z4 F1200
  M107        # turn off part cooling fan
  G90

  M400
  SET_DISPLAY_TEXT MSG="Heating nozzle to print temperature..."
  M104 S{target_extruder}   # Heats the nozzle to printing temp
  TEMPERATURE_WAIT SENSOR=extruder minimum={min_ext} maximum={max_ext}

  M400
  SET_DISPLAY_TEXT MSG="Cleaning nozzle..."
  CLEAN_NOZZLE_QUICK
   
# Gets ready to print by doing a purge line and updating the SB-leds
  M400
  SET_DISPLAY_TEXT MSG="Purge line..."          # Displays info
  STATUS_PRINTING   # Sets SB-leds to printing-mode
  G90
  G0 X75 Y4 F10000                              # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91 # Incremental positioning 
  G92 E0
  G1 E2 F2100
  G1 X200 E40 F1000                                # Purge line
  G90                                              # Absolute position
  #SET_FILAMENT_SENSOR SENSOR=filament_encoder_sensor ENABLE=1
  #set_nozzle_leds_off
  M400
  SET_DISPLAY_TEXT MSG="Printing..."          # Displays info

##------------------------------------------------------------------------------------------##
################################ END PRINT ###################################################
##------------------------------------------------------------------------------------------##

[gcode_macro PRINT_END]
variable_bedtemp: 0
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 10, th.axis_maximum.z]|min %}
    #SET_FILAMENT_SENSOR SENSOR=filament_encoder_sensor ENABLE=0
    SET_LED LED=disco1 RED=0.4 GREEN=0.4 BLUE=0.4
    set_nozzle_leds_off
    
    SET_VELOCITY_LIMIT ACCEL={printer.configfile.settings.printer.max_accel|int}
    #SET_VELOCITY_LIMIT ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel|int}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={printer.configfile.settings.printer.square_corner_velocity|float}
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity|int}

    
    TURN_OFF_HEATERS
    cancel_adaptive_exhaust
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-6.0 F3600                 ; retract filament
    
    # enable gradual cool down if printing high temp materials
    {% if bedtemp > 90 %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1.0
        SET_FAN_SPEED FAN=exhaust_fan SPEED=0.5
        UPDATE_DELAYED_GCODE ID=nevermore_off DURATION=1800
        M118 Start gradual bed cooling ({bedtemp}C°).
        M118 reduce temp to ({bedtemp - 5 }C°).
        M140 S{bedtemp - 5}
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=600
    {% else %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0
        SET_FAN_SPEED FAN=exhaust_fan SPEED=0.4
        UPDATE_DELAYED_GCODE ID=nevermore_off DURATION=600
    {% endif %}

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X200 Y320 F7200   ; park nozzle at the rear for easy cleaning

    G91
    G92 E0  
    G4 P10000
    G1 E-5.0 F1800
    G90

    {% if z_safe < 120 %}       ; check if current Z is below 100mm
      G1 Z120 F900                                                                     ; raise Z up by z hop amount0
    {% endif %}
    #reset gcode offset
    SET_GCODE_OFFSET Z=0
    M107                                     ; turn off fan
    M117
    M400
    BED_MESH_CLEAR
    OFF
    M400
    SET_DISPLAY_TEXT MSG="JOB 100% COMPLETE"          # Displays info
    status_off
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[delayed_gcode gradual_cooldown]
gcode:
    {% if printer.heater_bed.target > 60 %}
        M118 Reduce temp to ({printer.heater_bed.target - 5 }C°).
        M140 S{ printer.heater_bed.target - 5 }
        UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=600
    {% else %}
        M118 Gradual bed cooling finished ({printer.heater_bed.temperature}C°).
        M140 S0 #turn off bed
    {% endif %}

[delayed_gcode adaptive_exhaust_fan]
gcode:
    {% if printer.heater_bed.target < 90 %}
        {% if printer["temperature_sensor chamber"].temperature > 40 %}
           SET_FAN_SPEED FAN=exhaust_fan SPEED=1.0
           MR_NOTIFY TITLE="Chamber temperature" MESSAGE="Chamber temperature over 40C. Danger for heat creep."
           RESPOND TYPE=echo MSG="Chamber temperature over 38C. Danger for heat creep."
        {% elif printer["temperature_sensor chamber"].temperature > 39 %}
           SET_FAN_SPEED FAN=exhaust_fan SPEED=0.8
           RESPOND TYPE=echo MSG="Exhaust fan to 80%"
        {% elif printer["temperature_sensor chamber"].temperature > 38 %}
           SET_FAN_SPEED FAN=exhaust_fan SPEED=0.7
           RESPOND TYPE=echo MSG="Exhaust fan to 70%"
        {% elif printer["temperature_sensor chamber"].temperature > 37 %}
           SET_FAN_SPEED FAN=exhaust_fan SPEED=0.6
           RESPOND TYPE=echo MSG="Exhaust fan to 60%"
        {% else %}
           SET_FAN_SPEED FAN=exhaust_fan SPEED=0.4
           RESPOND TYPE=echo MSG="Exhaust fan to 40%"
        {% endif %}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=adaptive_exhaust_fan DURATION=60

[gcode_macro cancel_adaptive_exhaust]
gcode:
  RESPOND TYPE=echo MSG="Adaptive exhaust cancelled"
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0.0
  UPDATE_DELAYED_GCODE ID=adaptive_exhaust_fan DURATION=0

[gcode_macro CANCEL_COOLDOWN]
gcode:
  M118 Cooldown cancelled.
  UPDATE_DELAYED_GCODE ID=gradual_cooldown DURATION=0
  M140 S0 #turn off bed

[delayed_gcode nevermore_off]
gcode:
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0 #turn off nevermore filter
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0

[gcode_macro CANCEL_NEVERMORE]
gcode:
  UPDATE_DELAYED_GCODE ID=nevermore_off DURATION=0
  SET_FAN_SPEED FAN=nevermore_fan SPEED=0 #turn off nevermore filter
  SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    